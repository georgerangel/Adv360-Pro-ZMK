/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        Delete_Word {
            bindings = <&kp LA(DELETE)>;
            key-positions = <31 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL      &kp N1     &kp N2    &kp N3  &kp N4     &kp N5  &tog 0                                                 &mo 3      &kp N6  &kp N7     &kp N8     &kp N9    &kp N0           &kp MINUS
&kp TAB        &kp Q      &kp W     &kp E   &kp R      &kp T   &none                                                  &none      &kp Y   &kp U      &kp I      &kp O     &kp P            &kp BSLH
&kp BACKSPACE  &kp A      &kp S     &kp D   &kp F      &kp G   &none   &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp J      &kp K      &kp L     &lt 4 SEMICOLON  &kp SQT
&kp LSHFT      &kp Z      &kp X     &kp C   &kp V      &kp B                      &kp HOME      &kp PG_UP                        &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH         &kp RSHFT
&mo 2          &kp GRAVE  &kp CAPS  &trans  &kp LCTRL          &mo 4   &mo 0      &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp RCTRL  &trans     &kp LBKT  &kp RBKT         &mo 2
            >;
        };

        mac_os {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3  &kp N4     &kp N5  &trans                                               &trans     &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E   &kp R      &kp T   &trans                                               &trans     &kp Y   &kp U      &kp I      &kp O     &kp P     &kp BSLH
&kp BSPC   &kp A      &kp S     &kp D   &kp F      &kp G   &trans  &kp LGUI  &kp LALT      &kp RALT  &kp RGUI   &trans     &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C   &kp V      &kp B                     &trans        &trans                          &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&trans     &kp GRAVE  &kp CAPS  &trans  &kp LCTRL          &trans  &trans    &trans        &trans    &kp ENTER  &kp SPACE          &kp RCTRL  &kp LBKT   &kp LBKT  &kp RBKT  &trans
            >;

            label = "Mac OS";
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 0                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans       &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &none        &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &none               &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_Vim {
            bindings = <
&trans   &kp F1  &kp F2         &kp F3  &kp F4            &kp F5             &trans                                      &trans  &kp F6          &kp F7          &kp F8        &kp F9           &kp F10   &kp EQUAL
&kp ESC  &trans  &kp LC(RIGHT)  &trans  &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))  &trans                                      &trans  &trans          &kp LC(Z)       &trans        &trans           &trans    &trans
&kp DEL  &trans  &trans         &trans  &trans            &trans             &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp HOME  &kp END
&trans   &trans  &trans         &trans  &trans            &kp LC(LEFT)                       &trans      &trans                  &trans          &trans          &trans        &trans           &trans    &trans
&trans   &trans  &trans         &trans  &trans                               &trans  &trans  &trans      &trans  &trans  &trans                  &trans          &trans        &trans           &trans    &trans
            >;
        };
    };
};
